// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Image {
  id         String    @id @unique @default(cuid()) @db.VarChar(255)
  sign       String    @unique
  suffix     String
  url        String
  width      Int
  height     Int
  createTime DateTime
  updateTime DateTime
  CodeFun    CodeFun[]
  Article    Article[]
  Author     Author[]
}

model Author {
  id       String    @id @unique @default(cuid()) @db.VarChar(255)
  avatar   Image     @relation(fields: [imageId], references: [id])
  imageId  String    @db.VarChar(255)
  name     String    @unique
  homepage String    @unique
  CodeFun  CodeFun[]
  Article  Article[]
}

model Article {
  id         String   @id @unique @default(cuid()) @db.VarChar(255)
  slug       String   @unique
  title      String
  desc       String?  @db.Text
  cover      Image?   @relation(fields: [imageId], references: [id])
  imageId    String?  @db.VarChar(255)
  status     Int
  createTime DateTime
  updateTime DateTime
  author     Author   @relation(fields: [authorId], references: [id])
  authorId   String   @db.VarChar(255)
}

model CodeFun {
  id           String   @id @unique @default(cuid()) @db.VarChar(255)
  slug         String   @unique
  content      String   @db.LongText
  title        String
  desc         String   @db.Text
  keywords     String   @db.Text
  date         DateTime
  isResponsive Boolean
  cover        Image    @relation(fields: [imageId], references: [id])
  htmlStr      String   @db.LongText
  status       Int
  createTime   DateTime
  updateTime   DateTime
  imageId      String   @db.VarChar(255)
  author       Author   @relation(fields: [authorId], references: [id])
  authorId     String   @db.VarChar(255)
}
